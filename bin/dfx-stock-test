#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"
. "$SOURCE_DIR/versions.bash"

print_help() {
  cat <<-EOF

	Tests that the stock deployment has the expected state.

	The test may be applied to any stock deployment:
	- To local dfx
	- To a local dfx that has been frozen and reincarnated
	- Remote testnets
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
# Source the output file ----------------------------------------------------------
source "$(clap.build)"
source "$SOURCE_DIR/test_utils.bash"

export DFX_NETWORK

(
  print_title "sns_aggregator should be installed"
  index_html="$(mktemp index_XXXX)"
  curl --silent --retry 5 --fail "$(dfx-canister-url sns_aggregator)" >"$index_html" || {
    echo "ERROR: Should be able to get sns_aggregator home page."
    exit 1
  } >&2
  expected_in_index="The aggregator collects information on all deployed SNS"
  grep -q "$expected_in_index" "$index_html" || {
    echo "ERROR: The aggregator home page should include the expected text."
    echo "       - The home page may have changed; if so please update the expected text."
    echo "       - The attempt to retrieve the home page may have got an error page or"
    echo "         blank response.  If so, please make sure that the aggregator is"
    echo "         installed correctly."
    echo "EXPECTED TO FIND: '$expected_in_index'"
    echo "IN PAGE CONTENT:"
    cat "$index_html"
    exit 1
  } >&2
)

(
  print_title "sns_aggregator should have 12 SNSs"
  # This means the second page should have 2 SNSs.
  aggregator_url="http://$(dfx canister id sns_aggregator).localhost:8080/v1/sns/list/page/1/slow.json"
  if [ "$(curl -fsS "$aggregator_url" | jq length)" != "2" ]; then
    echo "ERROR: The aggragtor should have 12 SNSs." >&2
    exit 1
  fi
)

(
  # We expect 4 ck tokens + 10 SNSes (from the aggregator first page)
  print_title "icp-swap should have 14 tickers"
  icp_swap_url="http://$(dfx canister id icp-swap).localhost:8080/tickers"
  if [ "$(curl -fsS "$icp_swap_url" | jq length)" != "14" ]; then
    echo "ERROR: icp-swap should have 14 tickers." >&2
    exit 1
  fi
)

echo "$(basename "$0") PASSED"
