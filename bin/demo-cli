#!/usr/bin/env bash
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
DEMO_BIN="$(realpath "${SOURCE_DIR}/../bin-other")"
PATH="$SOURCE_DIR:$DEMO_BIN:$HOME/.local/bin:$PATH:$(dfx cache show)"
export PATH

# Source the optparse.bash file ---------------------------------------------------
source "$SOURCE_DIR/optparse.bash"
# Define options
optparse.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
optparse.define short=c long=ic_commit desc="The IC commit to use" variable=IC_COMMIT default=""
optparse.define short=x long=ic_dir desc="Directory containing the ic source code" variable=IC_REPO_DIR default="$HOME/dfn/ic"
optparse.define short=y long=nd_dir desc="Directory containing the nns-dapp source code" variable=ND_REPO_DIR default="$HOME/dfn/nns-dapp"
# Source the output file ----------------------------------------------------------
source "$(optparse.build)"
set -euxo pipefail
cd "$(dirname "$(realpath "$0")")/.."

demo-cleanup

# If ic-commit is specified, get execuables from there:
[[ "${IC_COMMIT:-}" != "latest" ]] || IC_COMMIT="$(dfx-software ic latest)"
[[ "${IC_COMMIT:-}" != "" ]] || IC_COMMIT="$(dfx-software ic current)"
rm -fr "$DEMO_BIN"
dfx-software ic install-executable --commit "$IC_COMMIT" --bin "$DEMO_BIN" ic-admin sns
echo "Using binaries from ic commit: $IC_COMMIT"

./bin/demo-system-subnet

export DFX_NETWORK
dfx-network-deploy --network "$DFX_NETWORK" --ic_dir "$IC_REPO_DIR" --nd_dir "$ND_REPO_DIR"

# dfx nns import --network-mapping "$DFX_NETWORK=mainnet"
# The above does NOT include nns-sns-wasm.  So import for local (which does include the canister????) and then copy to the requested network.
# dfx nns import
# jq '.*(.canisters | to_entries | map(select(.key | startswith("nns-")) | .value.remote.id[env.DFX_NETWORK] = .value.remote.id.local) |from_entries | {canisters:.})' dfx.json | sponge dfx.json
dfx nns import --network-mapping "$DFX_NETWORK=local"
dfx sns import

rm -fr "$HOME/.config/dfx/identity/snsdemo8"
dfx identity new --disable-encryption snsdemo8
dfx identity use snsdemo8

bin/dfx-ledger-get-icp --icp 900000000 --network "$DFX_NETWORK"
dfx ledger balance --network "$DFX_NETWORK"
bin/dfx-neuron-create --icp 500000000 --network "$DFX_NETWORK" --verbose
bin/dfx-neuron-prolong --network "$DFX_NETWORK"

./bin/dfx-sns-whitelist-me --network "$DFX_NETWORK"
./bin/dfx-sns-subnet-add --network "$DFX_NETWORK"
./bin/dfx-sns-wasm-download --commit "$IC_COMMIT"
./bin/dfx-sns-wasm-upload --network "$DFX_NETWORK"

./bin/demo-mksns --network "$DFX_NETWORK"

: "Demo finished!  Hope you enjoyed the show."
