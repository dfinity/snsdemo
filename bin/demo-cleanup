#!/usr/bin/env bash
set -euo pipefail
. .demo-env || true

echo "Deleting existing test identities: ident-1, ident-2, ..."
for ((i = 1; i < 5; i++)); do
  id="ident-$i"
  id_dir="$HOME/.config/dfx/identity/$id"
  if test -d "$id_dir"; then
    read -rp "Delete identity $id? [y/N] " del_id
    del_id="$(echo "${del_id:-N}" | tr '[:upper:]' '[:lower:]')"
    [[ "$del_id" != "y" ]] || rm -fr "$id_dir"
  fi
done

echo "Deleting smiley canister IDs"
rm -f canister_ids.json
cp dfx.json.original dfx.json

echo "Checking that we have a network..."
while test -z "${DFX_NETWORK:-}"; do
  echo PLEASE RERUN AFTER:
  echo export DFX_NETWORK=???
  exit 1
done

echo "Checking that we have an nns-dapp dir..."
while true; do
  test -e "${ND_DIR:-}/dfx.json" && break || {
    echo PLEASE RERUN AFTER:
    echo export ND_DIR=???
    exit 1
  }
done

echo "Checking that we have network config"
jq -e '.networks[env.DFX_NETWORK]' dfx.json || {
  jq -s '.[0] * .[1]' dfx.json <(
    cd "$ND_DIR"
    jq '{networks: .networks}' dfx.json
  ) >dfx.json.new && mv dfx.json.new dfx.json
}
