#!/usr/bin/env bash
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# Source the optparse.bash file ---------------------------------------------------
source "$SOURCE_DIR/optparse.bash"
# Define options
optparse.define short=x long=ic_dir desc="Directory containing the ic source code" variable=IC_REPO_DIR default="$HOME/dfn/ic"
optparse.define short=b long=before desc="Latest published commit before the given one" variable=IC_COMMIT_BEFORE default=""
# Source the output file ----------------------------------------------------------
source "$(optparse.build)"
set -eu # No pipefail

function disk_image_exists() {
  (
    set -euo pipefail

    curl -fL --output /dev/null --silent --head --fail \
      "https://download.dfinity.systems/ic/$GIT_REVISION/guest-os/disk-img/disk-img.tar.gz" ||
      curl --output /dev/null --silent --head --fail \
        "https://download.dfinity.systems/ic/$GIT_REVISION/guest-os/disk-img.tar.gz" || exit 1

    curl -fL --output /dev/null --silent --head --fail \
      "https://download.dfinity.systems/ic/$GIT_REVISION/guest-os/update-img/SHA256SUMS" || exit 1

    # Mac buids can lag or be missing
    curl -fL --output /dev/null --silent --head --fail \
      "https://download.dfinity.systems/ic/${GIT_REVISION}/binaries/x86_64-darwin/ic-admin.gz" || exit 1
    curl -fL --output /dev/null --silent --head --fail \
      "https://download.dfinity.systems/ic/${GIT_REVISION}/binaries/x86_64-linux/ic-admin.gz" || exit 1
    # Syncing to the public repo may be slow
    curl -fL --output /dev/null --silent --head --fail \
      "https://raw.githubusercontent.com/dfinity/ic/${GIT_REVISION}/rs/nns/dfx.json" || exit 1
  )
}

(
  cd "$IC_REPO_DIR"
  git fetch
  if test -n "${IC_COMMIT_BEFORE:-}"; then
    IC_COMMIT="$(git log --pretty=%P -n 1 "$IC_COMMIT_BEFORE" | awk '{print $2}')"
  else
    IC_COMMIT="$(git rev-parse origin/master)"
  fi
  git log --format=format:%H "$IC_COMMIT"
) | while read -r GIT_REVISION; do disk_image_exists && echo "$GIT_REVISION" && break; done
