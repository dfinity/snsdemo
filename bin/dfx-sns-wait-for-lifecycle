#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

print_help() {
  # ShellCheck somehow thinks this code is unreachable.
  # shellcheck disable=SC2317
  cat <<-EOF

	Wait up to 2 minutes for the current SNS to reach the given lifecycle.
	EOF
}

LIFECYCLES=(
  "pending"
  "open"
  "committed"
  "aborted"
  "adopted"
)

LIFECYCLE_LIST=$(printf " %s," "${LIFECYCLES[@]}")
LIFECYCLE_LIST=${LIFECYCLE_LIST%,*}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=l long=lifecycle desc="One of $LIFECYCLE_LIST" variable=LIFECYCLE default="open"
clap.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
clap.define short=i long=identity desc="The dfx identity to use" variable=DFX_IDENTITY default="$(dfx identity whoami)"
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

# ShellCheck wants to remove the quotes to match on a regex. But the quote are
# important to preserve the leading space.
# shellcheck disable=SC2076
if [[ ! "${LIFECYCLE_LIST}" =~ " ${LIFECYCLE:-}," ]]; then
  echo "ERROR: Unknown lifecycle '$LIFECYCLE'"
  echo "Please choose one of: $LIFECYCLE_LIST"
  exit 1
fi

current_lifecycle=$(dfx-sns-get-lifecycle --network "$DFX_NETWORK" --identity "$DFX_IDENTITY")

echo "Current lifecycle: $current_lifecycle"
echo "Waiting for lifecycle: $LIFECYCLE"

for ((try = 60; try > 0; try--)); do
  if [[ "$current_lifecycle" == "$LIFECYCLE" ]]; then
    echo "Lifecycle reached."
    exit 0
  fi
  sleep 2
  current_lifecycle=$(dfx-sns-get-lifecycle --network "$DFX_NETWORK" --identity "$DFX_IDENTITY")
done

echo "ERROR: Lifecycle not reached after 2 minutes."
exit 1
