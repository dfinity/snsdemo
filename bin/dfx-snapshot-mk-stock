#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

print_help() {
  cat <<-EOF

	Creates a snapshot of a stock environment, for use in CI tests.
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=s long=snapshot desc="The file to save to" variable=DFX_SNAPSHOT_FILE default="stock-snsdemo-snapshot.tar.xz"
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

: Set up SNS state and create one finalized SNS
bin/dfx-sns-demo

: "Wait for a snapshot"
SNAPSHOT_DIR="$HOME/.local/share/dfx/network/local/state/replicated_state/node-100/state/checkpoints/"
watch --chgexit ls "$SNAPSHOT_DIR"
sleep 5 # Make sure the snapshot is fully populated.  I don't know how to check for this.  It _may_ be atomic.

: Stop the replica to let it persist all its state before we save the state.
dfx stop

echo "Waiting for replica to stop"
for ((i = 100; i > 0; i--)); do
  printf '\r % 4d' "$i"
  pgrep replica || break
  sleep 1
done
echo

echo "Making sure the replica is dead"
dfx-network-stop
sleep 1
echo "Saving state"
dfx-snapshot-save --verbose --snapshot "$DFX_SNAPSHOT_FILE"
