#!/usr/bin/env bash
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

# Source the optparse.bash file ---------------------------------------------------
source "$SOURCE_DIR/optparse.bash"
# Define options
optparse.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
optparse.define short=c long=commit desc="The IC commit of the wasms" variable=DFX_IC_COMMIT default="$(
  . "$SOURCE_DIR/versions.bash"
  echo "$DFX_IC_COMMIT"
)"
optparse.define short=x long=ic_dir desc="Directory containing the ic source code" variable=IC_REPO_DIR default="$HOME/dfn/ic"
optparse.define short=y long=nd_dir desc="Directory containing the nns-dapp source code" variable=ND_REPO_DIR default="$HOME/dfn/nns-dapp"
# Source the output file ----------------------------------------------------------
source "$(optparse.build)"
set -euo pipefail

export DFX_NETWORK

if [[ "$DFX_NETWORK" == "local" ]]; then
  echo NOT APPLICABLE
  exit 1
else
  # Run remotely with one of the predefined configurations.
  # Note: This is still relatively slow and error prone.  Points of friction need to be ironed
  # out before we can resonably ask people to do this.
  IC_REPO_DIR="${IC_REPO_DIR:-$HOME/dfn/ic-github/}"
  ND_REPO_DIR="${ND_REPO_DIR:-$HOME/dfn/nns-dapp/}"
  TESTNET="$DFX_NETWORK"
  test -d "$ND_REPO_DIR" || {
    echo "Invalid directory for nns-dapp source code: $ND_REPO_DIR"
    exit 1
  } >&2
  (
    set -euxo pipefail
    echo "Building custom canisters..."
    cd "$ND_REPO_DIR"
    ./e2e-tests/scripts/nns-canister-download
    ./e2e-tests/scripts/nns-canister-build
  )
  (
    set -euxo pipefail
    echo "Deploying testnet..."
    cd "$IC_REPO_DIR"
    git checkout "$DFX_IC_COMMIT"
    cat <<-EOF >test-accounts.json
			{
                          "custom_canister_dir": "${ND_REPO_DIR}/target/ic",
			  "init_ledger_accounts":["5b315d2f6702cb3a27d826161797d7b2c2e131cd312aece51d4d5574d1247087", "2b8fbde99de881f695f279d2a892b1137bfe81a42d7694e064b1be58701e1138"]
			}
		EOF

    ./testnet/tools/icos_deploy.sh --boundary-dev-image --git-revision "$DFX_IC_COMMIT" "$TESTNET" --ansible-args "-e @$PWD/test-accounts.json" || {
      echo "Tesnet returned an error code but it returns errors for very minor reasons.  The deployment is probably fine."
    }
    (cd "testnet/env/$TESTNET/" && ./hosts --nns-nodes | awk '{printf "%s http://[%s]:8080\n", $1, $2}')
    dfx-network-delete --network "$DFX_NETWORK"
  )
fi
