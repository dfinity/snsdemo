#!/usr/bin/env bash
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"
. "$SOURCE_DIR/versions.bash"

# Source the optparse.bash file ---------------------------------------------------
source "$SOURCE_DIR/optparse.bash"
# Define options
optparse.define short=v long=version desc="The version of dfx to install" variable=DFX_VERSION default="latest"
# Source the output file ----------------------------------------------------------
source "$(optparse.build)"
set -euo pipefail

[[ "${DFX_VERSION}" != "latest" ]] || DFX_VERSION=""
DFX_VERSION="${DFX_VERSION#v}"

if command -v dfx && [[ "$(dfx --version | awk '{print $2}')" == "${DFX_VERSION:-}" ]]; then
  echo "dfx v$DFX_VERSION already installed.  Nothing to do."
  exit 0
fi

if command -v dfx >/dev/null; then
  CURRENT_DFX_BINARY="$(command -v dfx)"
  CACHED_DFX_BINARY="$(dirname "$(dfx cache show)")/${DFX_VERSION}/dfx"
  if test -x "$CACHED_DFX_BINARY"; then
    echo "Installing cached version to $CURRENT_DFX_BINARY"
    cp "$CACHED_DFX_BINARY" "$CURRENT_DFX_BINARY"
    exit 0
  fi
fi

export DFX_VERSION
sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"
