#!/usr/bin/env bash
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# This extends the functionality of `dfx wallet top-up` with:
#  * the --to flag
#  * a default wallet - the current one.

# Source the optparse.bash file ---------------------------------------------------
source "$SOURCE_DIR/optparse.bash"
# Define options
# dfx ledger account-id doesn't accept --accout as a falg so we can't provde it either.
#optparse.define short=a long=account desc="The dfx account requesting the funds" variable=account default="$(dfx identity whoami)"
optparse.define short=c long=amount desc="The amount of ICP to convert to cycles" variable=AMOUNT default="2"
optparse.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
optparse.define short=t long=to desc="Top up if the cycle balance is below this." variable=WANT_CYCLES
# Source the output file ----------------------------------------------------------
source "$(optparse.build)"
set -euo pipefail

# Checks whether anything needs to be done
if test -n "${IF_NEEDED:-}"; then
  HAVE_CYCLES="$(dfx wallet balance --network "$DFX_NETWORK" --precise | awk '{print $1 / 1000000000}')"
  NEED_CYCLES="$(awk -vwant="$WANT_CYCLES" -vhave="$HAVE_CYCLES" 'BEGIN{need=(want - have);if(need<=0){print 0; exit 0}if(need < 1){print 1}else{print need}}')"
  if [[ "$NEED_CYCLES" == "0" ]]; then
    echo "Balance is already over $WANT_CYCLES TC"
  else
    echo "Topping up by $AMOUNT ICP ..."
    dfx ledger top-up --amount "$NEED_CYCLES" --network "$DFX_NETWORK" "$(dfx identity get-wallet --network "$DFX_NETWORK")"
  fi
  exit 0
else
  dfx ledger top-up --amount "$AMOUNT" --network "$DFX_NETWORK" "$(dfx identity get-wallet --network "$DFX_NETWORK")"
fi
