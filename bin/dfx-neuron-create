#!/usr/bin/env bash
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# Source the optparse.bash file ---------------------------------------------------
source "$SOURCE_DIR/optparse.bash"
# Define options
optparse.define short=s long=icp desc="The amount of ICP to icp" variable=icp default=1
optparse.define short=i long=identity desc="The dfx identity to use" variable=identity default="$(dfx identity whoami)"
optparse.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
# Source the output file ----------------------------------------------------------
source $(optparse.build)
set -euo pipefail

# Create a neuron
PEM="$HOME/.config/dfx/identity/$identity/identity.pem"
NEURONS_DIR="$HOME/.config/dfx/identity/$identity/neurons"
mkdir -p "$NEURONS_DIR"
NEURONS_FILE="$NEURONS_DIR/$DFX_NETWORK"
export IC_URL="$("$SOURCE_DIR/dfx-network-url" --network "$DFX_NETWORK")"
# Note: Quill send puts a pile of junk on stdout and has no option to put just the response(s) somewhere safe such as a file.
NEURON_ID="$(quill neuron-stake --insecure-local-dev-mode --pem-file "$PEM" --amount "$icp" --name 1 | tee -a /dev/stderr |
  quill send --yes --insecure-local-dev-mode - | tee -a /dev/stderr |
  perl -e 'while($_ = <>){if (s/NeuronId = record \{ id = ([0-9_]+) : nat64 \}/\1/){ print $_ }}' |
  tr -cd '[:alnum:]' | tee -a /dev/stderr)"

echo "$NEURON_ID" >>"$NEURONS_FILE"
echo
tail -n1 "$NEURONS_FILE"
