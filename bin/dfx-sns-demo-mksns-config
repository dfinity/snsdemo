#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

print_help() {
  cat <<-EOF

	Creates an sns.yml to configure an SNS swap.
	EOF
}

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define long=template_file desc="The sns init template yaml file" variable=SNS_INIT_PATH default="$SOURCE_DIR/sns_init.yaml"
clap.define long=confirmation_text desc="A text that needs to be confirmed by the swap participants" variable=CONFIRMATION_TEXT default=""
clap.define long=config_index desc="An index used to select different names and/or logos for Sns configuration." variable=CONFIG_INDEX
clap.define long=unique_logo desc="A flag to use an config-index-based pseudo-unique logo instead of the default logo." variable=UNIQUE_LOGO default=false
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

if [ -z "${CONFIG_INDEX:-}" ]; then
  echo "Error: --config_index is required"
  exit 1
fi

TOKEN_NAMES=("Alfa Centauri" "Bravo" "Charlie" "Delta" "Echo Alot" "Foxtrot" "Golf Stream" "Hotel" "India" "Juliett" "Kilo Byte" "Lima Bean" "Mike Box" "November" "Oscar" "PapaYa" "Quebec" "Romeo" "Sierra" "Tango" "Uniform" "Victor" "Whiskey" "X and Ray" "Yankee" "Zululu")
TOKEN_SYMBOLS=("ALF" "BRV" "CHR" "DLT" "ECH" "FXT" "GLF" "HTL" "IND" "JLT" "KIO" "LIM" "MIK" "NVM" "OSC" "PAP" "QBC" "ROM" "SRR" "TNG" "UNF" "VIC" "WKE" "XAR" "YNK" "ZUL")
effective_index=$((CONFIG_INDEX % ${#TOKEN_NAMES[@]}))
iteration=$((CONFIG_INDEX / ${#TOKEN_NAMES[@]}))
TOKEN_SYMBOL=${TOKEN_SYMBOLS[$effective_index]}
TOKEN_NAME=${TOKEN_NAMES[$effective_index]}
if [ $iteration -gt 0 ]; then
  # Use the iteration count to append a number to the TOKEN_NAME and TOKEN_SYMBOL
  # if it is greater than 0 to have unique names.
  TOKEN_SYMBOL="${TOKEN_SYMBOL}${iteration}"
  TOKEN_NAME="${TOKEN_NAME}${iteration}"
fi
TOKEN_LOGO="logo.png"
if [ "$UNIQUE_LOGO" = true ]; then
  TOKEN_LOGO="logos/$(echo "$TOKEN_NAME" | cut -c1).png"
fi

PRINCIPAL="$(dfx identity get-principal)"
# For original controllers, use:
# dfx canister info smiley_dapp --network "$DFX_NETWORK" | perl -e 'while($_ = <>){ if (s/^Controllers: *//){s/ +/, /g;print $_} }'

SED_COMMANDS="s|TOKEN_NAME|$TOKEN_NAME|g;
              s|TOKEN_SYMBOL|$TOKEN_SYMBOL|g;
              s|TOKEN_LOGO|$TOKEN_LOGO|g;
              s|PRINCIPAL|$PRINCIPAL|g"

if [ "${CONFIRMATION_TEXT:-}" ]; then
  # Adds the confirmation_text by replacing the entire commented out line
  # # confirmation_text: "CONFIRMATION_TEXT"
  # with
  # confirmation_text: "${CONFIRMATION_TEXT}"
  SED_COMMANDS="$SED_COMMANDS;s/# confirmation_text: \"CONFIRMATION_TEXT\"/confirmation_text: \"${CONFIRMATION_TEXT}\"/"
fi

sed "$SED_COMMANDS" "$SNS_INIT_PATH" >sns.yml

echo "Created an SNS: $TOKEN_SYMBOL"
