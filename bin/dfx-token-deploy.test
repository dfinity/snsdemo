#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$SOURCE_DIR:$PATH"

(
  printf "\n\n===================================\n"
  echo "Should fail if token canisters have not been imported"
  git checkout dfx.json
  error_log="$(mktemp ,test_log.XXXXXXXX)"
  if dfx-token-deploy --check 2>"$error_log"; then
    echo "ERROR: Should fail if token canisters are not in dfx.json"
    exit 1
  fi
  grep 'MyToken canister data and files are not all present and correct' "$error_log" || {
    echo "The check should complain about token canisters missing in dfx.json"
    exit 1
  }
  rm "$error_log"
)
(
  printf "\n\n===================================\n"
  echo "Should fail if token canisters have not been created"
  dfx-network-stop
  dfx start --clean --background
  git checkout dfx.json
  dfx-token-import
  error_log="$(mktemp ,test_log.XXXXXXXX)"
  if dfx-token-deploy --check 2>"$error_log"; then
    echo "ERROR: Should fail if token canisters are not in dfx.json"
  fi
  grep 'Cannot find canister id' "$error_log" || {
    echo "The check should complain about missing canisters:"
    echo "Actual error log:"
    cat "$error_log"
    exit 1
  }
  rm "$error_log"
  dfx-network-stop
)
(
  printf "\n\n===================================\n"
  echo "Should fail if token canisters have not been populated"
  dfx-network-stop
  dfx start --clean --background
  git checkout dfx.json
  dfx-token-import
  dfx canister create "mytoken_ledger" --no-wallet
  error_log="$(mktemp ,test_log.XXXXXXXX)"
  if dfx-token-deploy --check 2>"$error_log"; then
    echo "ERROR: Should fail if token canisters have the incorrect or no hash"
  fi
  grep 'ERROR: Deployed mytoken_ledger hash does not match.' "$error_log" || {
    echo "ERROR: The check should complain about missing canisters."
    echo "Actual error output:"
    sed 's/^/    /g' "$error_log"
    exit 1
  }
  rm "$error_log"
  dfx-network-stop
)
(
  printf "\n\n===================================\n"
  echo "Should succeed if canisters have been deployed"
  dfx-network-stop
  dfx start --clean --background
  git checkout dfx.json
  dfx-token-import
  dfx-token-deploy --yes
  dfx-token-deploy --check
  dfx-network-stop
)

printf "\n\n\ntoken tests passed.\n"
