#!/usr/bin/env bash
set -euo pipefail
SOURCE_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH="$PATH:$(dfx cache show)"
export PATH

# Source the clap.bash file ---------------------------------------------------
source "$SOURCE_DIR/clap.bash"
# Define options
clap.define short=n long=network desc="The dfx network to use" variable=DFX_NETWORK default="local"
clap.define short=c long=commit desc="The IC commit of the wasms" variable=DFX_IC_COMMIT default="$(
  . "$SOURCE_DIR/versions.bash"
  echo "$DFX_IC_COMMIT"
)"
clap.define short=i long=id desc="The wasm canister id to upload to" variable=SNS_WASM_CANISTER_ID default=''
# Source the output file ----------------------------------------------------------
source "$(clap.build)"

SNS_WASM_CANISTER_ID="${SNS_WASM_CANISTER_ID:-$(dfx canister id nns-sns-wasm --network "$DFX_NETWORK" 2>/dev/null)}"

SNS_PATH="$SOURCE_DIR/../bin-other/sns"
test -x "$SNS_PATH" || {
  echo "WARNING: sns executable not found in expected location: $SNS_PATH"
  echo "         Looking for an sns, but an alternative version MAY fail."
  echo "         To install the recommended toolchain:"
  echo "       '$SOURCE_DIR/dfx-sns-demo-install'"
  { SNS_PATH="$(command -v sns)" && test -x "$SNS_PATH"; } ||
    { SNS_PATH="$(dfx cache show)/sns" && test -x "$SNS_PATH"; } || {
    echo "ERROR: Could not find sns executable.  Please install the recommended toolchain:"
    echo "       '$SOURCE_DIR/dfx-sns-demo-install'"
    exit 1
  }
}

jq <"$SOURCE_DIR/sns_dfx.json" -r '.canisters | to_entries | map("\(.value.config.nns_sns_wasm_name) \(.value.wasm)") | .[]' | while read -r line; do
  # shellcheck disable=SC2086 # We do actually want to split the line into fields.
  set $line
  UPLOAD_NAME="$1"
  WASM_FILE="wasms/$2"
  set "$SNS_PATH" add-sns-wasm-for-tests \
    --network "$DFX_NETWORK" \
    --override-sns-wasm-canister-id-for-tests "${SNS_WASM_CANISTER_ID}" \
    --wasm-file "$WASM_FILE" "$UPLOAD_NAME"
  echo "${@}"
  "${@}"
done
